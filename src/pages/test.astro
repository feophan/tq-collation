---
import { marked } from 'marked';

import Layout from '../layouts/Layout.astro';
import Add from '../components/Add.astro';
import Del from '../components/Delete.astro';
import Rep from '../components/Replace.astro';
import RepD from '../components/Replace-Dec.astro';
import Same from '../components/Same.astro';

import data from '../data/TQ1.json';

import type { Data, Row, Col } from "../scripts/types";

// Map types to components
const tagMap = {
  'text': 'Fragment',
  add: Add,
  del: Del,
  rep: Rep,
  'rep-d': RepD
};
---
<Layout>
  <main class="overflow-x-auto">
    <div class="grid grid-flow-row grid-cols-[4rem_repeat(4,24rem)] gap-x-6 gap-y-6 text-justify leading-relaxed pb-10">
      <h1 class="text-center text-xl font-bold mb-6 col-span-full">{data.title}</h1>
      <div></div>
      {data.witnesses.map((ver) => (
        <div><h2 class="font-bold text-center">{ver}</h2></div>
      ))}
      {data.table.map((row: Row) => (
        <div class="contents">
          <div class="text-right text-gray-500">{row.index}</div>

          {row.cols.map((col) => (
            <div>
              <p>
                {col.map((seg: Col) => {
                  if (!Object.keys(seg).length) {
                    return <Same />;
                  }

                  const html = marked.parseInline(seg.value!);

                  const Tag = tagMap[seg.type as keyof typeof tagMap];
                  return Tag ? <Tag set:html={html}></Tag> : null;
                })}
              </p>
            </div>
          ))}
        </div>
      ))}
    </div>
  </main>
</Layout>
